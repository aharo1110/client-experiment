<!DOCTYPE html> 
<html lang="en"> 
    <head> 
        <meta charset="UTF-8" /> 
        <title>Chat</title> 
        <style> 
        html, body { 
            height: 100%;
            margin: 0;
            font-family: monospace !important; 
        } 
        .container {
            margin: 0 auto; 
            display: flex; 
            flex-direction: column; 
            justify-content: flex-end; 
            height: 100%;
            width: 100%;
            max-width: 620px;
        }
        p { margin: 10px 0 !important; }
        #chat { 
            width: 100%; 
            margin: auto; 
            flex: 1;
            overflow-y: auto;
            box-sizing: border-box;
            padding: 10px;
        }
        .message { 
            padding: 5px !important; 
            margin: 5px 0; 
            background-color: #fafafa !important; 
        } 
        .user-message { 
            text-align: right; 
            box-shadow: none !important; 
            background-color: #fff !important; 
        }
        input, button { padding: 10px; font-size: 16px; font-family: monospace; }
        input { flex: 1; }
        button { background-color: #f6f7f9}
        #entry { 
            width: 100%;
            max-width: 100%;
            display: flex; 
            justify-content: center; 
            gap: 10px; 
            margin: 20px auto;
            padding: 0 10px;
            align-self: flex-end;
        }
        </style> 
        <link rel="stylesheet" href="/node_modules/@blueprintjs/core/lib/css/blueprint.css" />
        <link rel="stylesheet" href="/node_modules/@blueprintjs/icons/lib/css/blueprint-icons.css" />
    </head> 
    <body> 
        <div class="container">
            <div id="chat">
            </div>
            <div id="entry">
                <input type="text" class="bp5-input" id="user_input" placeholder="Type a message..." /> 
                <button id="send_btn" class="bp5-button">Send</button>
            </div>
        </div>
        
        <script> 
            function scroll_to_bottom() {
                const chat_div = document.getElementById('chat');
                chat_div.scrollTop = chat_div.scrollHeight;
            }

            async function send_message() { 
                const input_element = document.getElementById('user_input');
                const user_input = input_element.value;
                input_element.value = '';

                if (!user_input) return;

                const chat_div = document.getElementById('chat');
                const userMessageDiv = document.createElement('div');
                userMessageDiv.className = 'bp5-card message user-message';
                userMessageDiv.innerHTML = `<p>${user_input}</p>`;
                chat_div.appendChild(userMessageDiv);

                scroll_to_bottom();

                try {
                    const response = await fetch('/chat', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ user_input })
                    });
                    const data = await response.json();
                    render_messages(data.messages);
                } catch (error) {
                    console.error('Error sending message:', error);
                } 
            } 
            document.getElementById('send_btn').addEventListener('click', send_message); 
            document.getElementById('user_input').addEventListener('keydown', (event) => {
                if (event.key === 'Enter') { send_message(); }});
            function render_messages(messages) { 
                const chat_div = document.getElementById('chat'); 
                chat_div.innerHTML = ''; 
                messages.forEach(msg => { 
                    const div = document.createElement('div'); 
                    div.className = msg.type == 'input' ? 'bp5-card message user-message' : 'bp5-card message'; 
                    div.innerHTML = msg.html; // Use pre-rendered HTML from the server
                    chat_div.appendChild(div); 
                }); 
                scroll_to_bottom();
            } 

            async function fetch_messages() { 
                const response = await fetch('/chat'); 
                const data = await response.json(); 
                render_messages(data.messages); 
            }

            document.addEventListener('DOMContentLoaded', fetch_messages);
        </script> 
    </body> 
</html>